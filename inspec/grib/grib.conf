[BASIC]
# File naming convention. Keywords used for format() are acceptable
# The datetime keywords are: 'cal_date' for calendar date corresponding
# to the forecast time (i.e. init_date + forecast offset), 
# Other keywords: 
# 	'fhr' = forecast hour 
#	'fmin' = forecast minute
#   dom = domain number
### Not specified here since this is a generic inputspec to be inherited
### by other specific file types (e.g. gfs and upp)
file_format = grib

[DEFAULT]
#__prefix = c1440_NR.inst30m
#__suffix = {cal_date:%Y%m%d_%H%M}z.nc4



[arbitrary_field_mappings]

[2d_field_mappings]
# technically, mslp is mslDelta, but it's always 2d, so it's fine here
__mslDelta_lev_type = Mean sea level (Pa)
__mslDelta_lev_indicator = [102] ; level_indicator is read in as an numpy array; we convert to str when comparing
__ground_lev_type = Ground or water surface
__ground_lev_indicator = [1]
mslp = attr(   long_name=Pressure reduced to MSL && level_type=%(__mslDelta_lev_type)s 
            || long_name=Pressure reduced to MSL && level_indicator=%(__mslDelta_lev_indicator)s )
precipitation_flux = attr(   long_name=Precipitation rate && level_type=%(__ground_lev_type)s 
                          || long_name=Precipitation rate && level_indicator=%(__ground_lev_indicator)s )

[isobaric_field_mappings]
__lev_type = Isobaric surface (Pa) ; Grib 2
__lev_indicator = [100] ; Grib 1
# Grib
air_temperature = attr(   long_name=Temperature && level_type=%(__lev_type)s 
                       || long_name=Temperature && level_indicator=%(__lev_indicator)s  )
relative_humidity = attr(   long_name=Relative humidity && level_type=%(__lev_type)s 
                         || long_name=Relative humidity && level_indicator=%(__lev_indicator)s  )
geopotential_height = attr(  long_name=Geopotential height && level_type=%(__lev_type)s  
                          || long_name=Geopotential height && level_indicator=%(__lev_indicator)s ) 
x_wind = attr(   long_name=U-component of wind && level_type=%(__lev_type)s 
              || long_name=u-component of wind && level_indicator=%(__lev_indicator)s ) 
y_wind = attr(   long_name=V-component of wind && level_type=%(__lev_type)s 
              || long_name=v-component of wind && level_indicator=%(__lev_indicator)s ) 
eastward_wind = %(x_wind)s
northward_wind = %(y_wind)s
upward_air_velocity = attr(   long_name=Vertical velocity (pressure) && level_type=%(__lev_type)s 
                           || long_name=Pressure vertical velocity   && level_indicator=%(__lev_indicator)s  )

[sfcDelta_field_mappings]

[mslDelta_field_mappings]
__lev_type = Mean sea level (Pa)
__lev_indicator = [102]

[soilDelta_field_mappings]
__lev_type = Depth below land surface (m)
__lev_indicator = [112]

[field_mappings_brainstorming]
# Brainstorming what can be done to deal with grib discrepency 
# (i.e. naming convention changes, even fore the same forecast)
mslp = PMSL
temperature = TT
#    name        grib1 params to look for       grib2 params to look for    # capitalization also varies, to just use l/c
u3d = UU||UU_10; long_name=u-component of wind,level_indicator=105,level=10 ; long_name=u-component of wind,level_type=specified height level above ground
v3d = VV
ght = HGT
specific_humidity = SPECHUMD ; NOTE: QV in native collection
qc = QC
rh = RH
pmid = PRESSURE
sea_surface_skin_temperature = SKINTEMP
#total_precipitation = ACPREC_TOT ;<That's for nmmb!

[field_mappings]
mslp = PMSL
temperature = TT
u3d = UU
v3d = VV
ght = HGT
specific_humidity = SPECHUMD ; NOTE: QV in native collection
qc = QC
rh = RH
pmid = PRESSURE
sea_surface_skin_temperature = SKINTEMP
#total_precipitation = ACPREC_TOT ;<That's for nmmb!


[field2lev_mappings]
# Maps fields to their corresponding dimension names and variables.
# In some cases, there is no variable associated with the 
# dimension (e.g. HWRF atmospheric value which are specified
# at midlayer, but only the interface pressure is available). In this case,
# just put a '-'

[latlon2field_mappings]
# Specify mappings from horizontal coordinate to field name
# This is only needed if the dimension name is not identical
# to the variable name. (e.g. if a field has dimensions 
# 'lat' and 'lon' and the corresponding variables containing 
# the dimension data are named 'lat' and 'lon', it is not
# necessary to specify a meapping here.
# 
# The mappings here are from the dimension variable's name to the 
# field name. The dimension's dimension name is a property of 
# the field itself, so it does not need to be specified.
# The mapping from dimension variable to dimension is specified in 
# [var2dim_mappings]
#
# One default option is allowed using '*'.
# e.g. if the output is on a staggered grid where the U and V variables
# are on a grid whose coordinates are specified with ULAT, ULON and 
# the rest are on a grid whose coordinates are specified with HLAT,
# HLON, you would have:
# HLAT,HLON = *
# VLAT,VLON = U,V
#
# The dimension name (i.e. RHS) must always be a comma-separated list with
# the name of the latitude variable followed by the name of longitude variable
#
# NOTE: The code assumes that the lat,lon variables' values are at the same
# stagger location as the fields they are mapped to here

[field2stagger_mappings]
# Map fields to where they are defined on the grid. The value given should
# be a string corresponding to one of the constants in ESMF.api.constants.StaggerLoc
# (see also: http://www.earthsystemmodeling.org/esmf_releases/non_public/ESMF_7_0_0/esmpy_doc/html/StaggerLoc.html)
##
# For Variables that have a "level_type" or "level_indicator" attribute, the _getstaggerloc() method
# of SpecData will make assumptions on what the values currently are for GriB.
# This assumption will be based on current parameter tables, so if the GriB meisters decide to 
# change things in the future, bad things may happen

[horizontal_configuration]

[vertical_level_types]

[vertical_configuration]
level_lookup_setting = 8 ; interpolate
#level_lookup_setting = 1 ; use nearest isobaric level
# Variable containing pressure level values

#[vertical_level_mappings]
# Map fields to the variables containing the level data
#TODO

[var2dim_mappings]
# Map dimension variables to the dimensions they correspond to.
# This is not needed if the dimension variable name is the same
# as the dimension name.
# The mapping from dimension variable to field is specified in 
# [horizontal_coordinate_mappings]
# We assume that there can be multiple mappings from dimension
# to dimension variable but only one mapping from dimension variable
# to dimension, so we map the variable to the dimension here.
# Horizontal coordinates _must_ be specified:
#    lat_var_name,lon_var_name = lat_dim_name,lon_dim_name
# Vertical coordinates _must_ be specified:
#    vertical_var_name = vertical_dim_name
# Not needed for GriB since Variable name corresponding to the dimension
# is the same as the dimension name


[time_dim_config]
# Settings for the time dimension
#time_dim_name = Time
